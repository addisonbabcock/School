AS68HC11 Assembler - Computer Engineering Tech.  -  Version: 1.56gb    Page 1
by Simon Walker


                              1 				.title by Simon Walker
                              2 ;**************************************************************************
                              3 ;* Sample.asm                                                             *
                              4 ;*                                                                        *
                              5 ;* The purpose of this program is to demonstrate source file page layout  *
                              6 ;* and basic AS6811 assembler syntax.                                     *
                              7 ;**************************************************************************
                              8 
                              9 ;.------------------------------------------------------------------------.
                             10 ;|                           EQUATES SECTION                              |
                             11 ;`------------------------------------------------------------------------'
                             12 
   C000                      13 LED			=	0xC000			; 2-digit LED display.
   1040                      14 RAMSTART	=	0x1040			; first byte of large RAM block
   7FFF                      15 RAMEND		=	0x7FFF			; end of RAM
   FFFE                      16 RESETVEC	=	0xFFFE			; reset vector for normal modes
   C000                      17 ROMSTART	=	0xC000			; Lowest EPROM address.
   FFFF                      18 ROMEND		=	0xFFFF			; Highest EPROM address.
   0FFF                      19 STACKTOP	=	0x0FFF			; top of stack (0x0FFF - 0x0100)
                             20 
                             21 ;.------------------------------------------------------------------------.
                             22 ;|                           TARGET CONTROL                               |
                             23 ;`------------------------------------------------------------------------'
                             24 
                             25 ; set the following variable to 1 to place program in EEPROM
                             26 ; set the following variable to 0 to place program in RAM
                             27 
   0000                      28 TARGETROM = 0		; 0 == RAM, 1 == EEPROM
                             29 
                             30 ;.------------------------------------------------------------------------.
                             31 ;|                               MAIN                                     |
                             32 ;`------------------------------------------------------------------------'
                             33 
                             34 				.MODULE MAIN				
                             35 				.AREA   StartUp (ABS)
                             36 								
   0000                      37 				.if TARGETROM == 1
                             38 					.ORG    ROMSTART
                             39 				.else
                             40 					.ORG	RAMSTART					
                             41 				.endif
                             42 
   1040                      43 Main:			
   0000                      44 				.if TARGETROM == 1
                             45 					LDS		#STACKTOP		; must have stack!
                             46 				.endif
                             47 				
                             48 				; place your program here ********************
                             49 				
   1040 86 99                50 wrap:			ldaa	#0x99
   1042 B7 C0 00             51 				staa	led
   1045 C6 32                52 				ldab	#50
   1047 BD 10 62             53 				jsr		dodelay
   104A 8B 99                54 loop:			adda	#0x99
   104C 19                   55 				daa
   104D B7 C0 00             56 				staa	led
AS68HC11 Assembler - Computer Engineering Tech.  -  Version: 1.56gb    Page 2
by Simon Walker


                             57 				;delay here
   1050 C6 32                58 				ldab	#50
   1052 BD 10 62             59 				jsr		dodelay
                             60 				;back to the real work
   1055 81 00                61 				cmpa	#0x00
   1057 26 F1                62 				bne		loop
   1059 B7 C0 00             63 				staa	led
   105C 7E 10 40             64 				jmp		wrap
   105F 7E C0 00             65 end:			jmp		romstart
                             66 
   1062 3C                   67 dodelay:		pshx
   1063 36                   68 				psha
   1064 17                   69 				tba
   1065 27 09                70 				beq		donedelay
   1067 CE 08 00             71 delayouter:		ldx		#0x0800
   106A 09                   72 delayloop:		dex
   106B 26 FD                73 				bne		delayloop
   106D 4A                   74 				deca
   106E 26 F7                75 				bne		delayouter
   1070 32                   76 donedelay:		pula
   1071 38                   77 				pulx
   1072 39                   78 				rts
                             79 							
                             80 				; ********************************************
                             81 
                             82 ;.------------------------------------------------------------------------.
                             83 ;|                            INCLUDES                                    |
                             84 ;`------------------------------------------------------------------------'
                             85 
                             86 ;.------------------------------------------------------------------------.
                             87 ;|                            CONSTANT  DATA                              |
                             88 ;`------------------------------------------------------------------------'
                             89 				
                             90 ;DumbTable:		.db		0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
                             91 
                             92 ;Copyright:		.ascii	"Copyright (c) 2002 by the person that wrote it. "
                             93 ;				.asciz	"Hands off."
                             94 
                             95 ;.------------------------------------------------------------------------.
                             96 ;|                             VARIABLES                                  |
                             97 ;`------------------------------------------------------------------------'
                             98 
                             99 ;.------------------------------------------------------------------------.
                            100 ;|                           RESET VECTOR                                 |
                            101 ;`------------------------------------------------------------------------'
                            102 
                            103 				.AREA	RESETVEC (ABS)
                            104 
   0000                     105 				.if TARGETROM == 1
                            106 					.org	RESETVEC		 ;Place the reset vector so that
                            107 					.DW		Main		     ;we can run this from power-up.
                            108 				.endif
                            109 				

   Input File: boil.asm
   Directory:  C:\PROGRA~1\HC11AS~1\START_~1
   Date:       2007/03/03
   Time:       11:56:37