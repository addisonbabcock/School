AS68HC11 Assembler - Computer Engineering Tech.  -  Version: 1.56gb    Page 1
by Simon Walker


                              1 				.title by Simon Walker
                              2 ;**************************************************************************
                              3 ;* Sample.asm                                                             *
                              4 ;*                                                                        *
                              5 ;* The purpose of this program is to demonstrate source file page layout  *
                              6 ;* and basic AS6811 assembler syntax.                                     *
                              7 ;**************************************************************************
                              8 
                              9 ;.------------------------------------------------------------------------.
                             10 ;|                           EQUATES SECTION                              |
                             11 ;`------------------------------------------------------------------------'
                             12 
   C000                      13 LED			=	0xC000			; 2-digit LED display.
   1040                      14 RAMSTART	=	0x1040			; first byte of large RAM block
   7FFF                      15 RAMEND		=	0x7FFF			; end of RAM
   FFFE                      16 RESETVEC	=	0xFFFE			; reset vector for normal modes
   C000                      17 ROMSTART	=	0xC000			; Lowest EPROM address.
   FFFF                      18 ROMEND		=	0xFFFF			; Highest EPROM address.
   0FFF                      19 STACKTOP	=	0x0FFF			; top of stack (0x0FFF - 0x0100)
                             20 
                             21 ;.------------------------------------------------------------------------.
                             22 ;|                           TARGET CONTROL                               |
                             23 ;`------------------------------------------------------------------------'
                             24 
                             25 ; set the following variable to 1 to place program in EEPROM
                             26 ; set the following variable to 0 to place program in RAM
                             27 
   0000                      28 TARGETROM = 0		; 0 == RAM, 1 == EEPROM
                             29 
                             30 ;.------------------------------------------------------------------------.
                             31 ;|                               MAIN                                     |
                             32 ;`------------------------------------------------------------------------'
                             33 
                             34 				.MODULE MAIN				
                             35 				.AREA   StartUp (ABS)
                             36 								
   0000                      37 				.if TARGETROM == 1
                             38 					.ORG    ROMSTART
                             39 				.else
                             40 					.ORG	RAMSTART					
                             41 				.endif
                             42 
   1040                      43 Main:			
   0000                      44 				.if TARGETROM == 1
                             45 					LDS		#STACKTOP		; must have stack!
                             46 				.endif
                             47 				
                             48 				; place your program here ********************
                             49 				
   1040 CE 20 00             50 				ldx		#0x2000
   1043 86 41                51 loop1:			ldaa	#0x41
   1045 A7 00                52 loop2:			staa	0,x
   1047 08                   53 				inx
   1048 4C                   54 				inca
   1049 8C 30 00             55 				cmpx	#0x3000
   104C 27 15                56 				beq		end
AS68HC11 Assembler - Computer Engineering Tech.  -  Version: 1.56gb    Page 2
by Simon Walker


   104E 81 5B                57 				cmpa	#0x5b
   1050 26 F3                58 				bne		loop2
   1052 86 61                59 loop3:			ldaa	#0x61
   1054 A7 00                60 loop4:			staa	0,x
   1056 08                   61 				inx
   1057 4C                   62 				inca
   1058 8C 30 00             63 				cmpx	#0x3000
   105B 27 06                64 				beq		end
   105D 81 7B                65 				cmpa	#0x7b
   105F 26 F3                66 				bne		loop4
   1061 27 E0                67 				beq		loop1
   1063 7E C0 00             68 end:			jmp		romstart
                             69 							
                             70 				; ********************************************
                             71 
                             72 ;.------------------------------------------------------------------------.
                             73 ;|                            INCLUDES                                    |
                             74 ;`------------------------------------------------------------------------'
                             75 
                             76 ;.------------------------------------------------------------------------.
                             77 ;|                            CONSTANT  DATA                              |
                             78 ;`------------------------------------------------------------------------'
                             79 				
                             80 ;DumbTable:		.db		0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
                             81 
                             82 ;Copyright:		.ascii	"Copyright (c) 2002 by the person that wrote it. "
                             83 ;				.asciz	"Hands off."
                             84 
                             85 ;.------------------------------------------------------------------------.
                             86 ;|                             VARIABLES                                  |
                             87 ;`------------------------------------------------------------------------'
                             88 
                             89 ;.------------------------------------------------------------------------.
                             90 ;|                           RESET VECTOR                                 |
                             91 ;`------------------------------------------------------------------------'
                             92 
                             93 				.AREA	RESETVEC (ABS)
                             94 
   0000                      95 				.if TARGETROM == 1
                             96 					.org	RESETVEC		 ;Place the reset vector so that
                             97 					.DW		Main		     ;we can run this from power-up.
                             98 				.endif
                             99 				

   Input File: boil.asm
   Directory:  C:\PROGRA~1\HC11AS~1\START_~1
   Date:       2007/03/03
   Time:       11:18:44